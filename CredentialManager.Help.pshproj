<?xml version="1.0"?>
<ModuleObject xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" fVersion="1.1" type="Binary" mclass="Module" useSupports="false">
  <Name>CredentialManager</Name>
  <Version>1.0</Version>
  <Description>Provides access to credentials in the Windows Credential Manager</Description>
  <HasManifest>true</HasManifest>
  <OverridePostCount>false</OverridePostCount>
  <FetchPostCount xsi:nil="true" />
  <Cmdlets>
    <CmdletObject verb="Get" noun="StoredCredential">
      <Name>Get-StoredCredential</Name>
      <GeneralHelp>
        <Synopsis>Gets stored credentials from the Windows Credential Store/Vault</Synopsis>
        <Description>Gets stored credentials from the Windows Credential Store/Vault and returns as either a PSCredential object or as a Credential Object</Description>
        <Notes>Credential object, contains more data and returns the password as plain text</Notes>
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Target Type AsCredentialObject Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Get-StoredCredential [-Target &lt;String&gt;] [-Type &lt;CRED_TYPE&gt;] [-AsCredentialObject] [-InformationAction &lt;ActionPreference&gt;] [-InformationVariable &lt;String&gt;]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Target</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ValidateLengthAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The command will only return credentials with the specified target</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="CRED_TYPE" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Type</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the type of credential to return, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE,   DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</Description>
          <DefaultValue>GENERIC</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AsCredentialObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Switch to return the credentials as Credential objects instead of the default PSObject</Description>
          <DefaultValue>false</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="ActionPreference" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InformationAction</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>infa</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InformationVariable</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.Internal.CommonParameters+ValidateVariableName</string>
          </Attributes>
          <Aliases>
            <string>iv</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-StoredCredential -Target Server01</Cmd>
          <Description>Returns credentials for Server01 as a PSCredential object</Description>
          <Output>UserName                      Password
--------                      --------
test-user System.Security.SecureString</Output>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>PS C:\&gt; Get-StoredCredential -Target Server01 -AsCredentialObject</Cmd>
          <Description>Returns credentials for Server01 as a Credential object</Description>
          <Output>Flags          : 0
Type           : GENERIC
TargetName     : server01
Comment        : 
LastWritten    : 23/04/2016 10:01:37
PaswordSize    : 18
Password       : Password1
Persist        : ENTERPRISE
AttributeCount : 0
Attributes     : 0
TargetAlias    : 
UserName       : test-user</Output>
        </Example>
      </Examples>
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Get" noun="StrongPassword">
      <Name>Get-StrongPassword</Name>
      <GeneralHelp>
        <Synopsis>Generates a strong password</Synopsis>
        <Description>Generates a strong password based on the parameters provided</Description>
        <Notes>This cmdlet does not do a lot currently, it only really generates a password based on System.Web.Security.Membership.GeneratePassword().</Notes>
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Length NumberOfSpecialCharacters Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Get-StrongPassword [-Length &lt;Int32&gt;] [-NumberOfSpecialCharacters &lt;Int32&gt;] [-InformationAction &lt;ActionPreference&gt;] [-InformationVariable &lt;String&gt;]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Length</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Length in Characters for the generated password to be.</Description>
          <DefaultValue>10</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>NumberOfSpecialCharacters</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Number of special characters to include in the password, must be less than the length of the password</Description>
          <DefaultValue>3</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="ActionPreference" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InformationAction</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>infa</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InformationVariable</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.Internal.CommonParameters+ValidateVariableName</string>
          </Attributes>
          <Aliases>
            <string>iv</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>PS C:\&gt; Get-StrongPassword</Cmd>
          <Description>Generates a password 10 characters long with 3 special characters</Description>
          <Output>QTJ(T?wwe)</Output>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>PS C:\&gt; Get-StrongPassword  -Length 20 -NumberOfSpecialCharacters 5</Cmd>
          <Description>Generates a password 20 characters long with 5 special characters</Description>
          <Output>zPN&gt;C%.f/(l1aGq)n3Ze</Output>
        </Example>
      </Examples>
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="New" noun="StoredCredential">
      <Name>New-StoredCredential</Name>
      <GeneralHelp>
        <Synopsis>Create a new credential in the Windows Credential Store/Vault</Synopsis>
        <Description>Create a new credential in the Windows Credential Store/Vault</Description>
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="Plain Text" Params="Target UserName Password Comment Type Persist Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
        <CommandParameterSetInfo2 Name="Secure String" Params="Target UserName SecurePassword Comment Type Persist Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
        <CommandParameterSetInfo2 Name="PSCredentialObject" Params="Target Comment Type Persist Credentials Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>New-StoredCredential [-Target &lt;String&gt;] [-UserName &lt;String&gt;] [-Password &lt;String&gt;] [-Comment &lt;String&gt;] [-Type &lt;CRED_TYPE&gt;] [-Persist &lt;CRED_PERSIST&gt;] [-InformationAction &lt;ActionPreference&gt;] [-InformationVariable &lt;String&gt;]</string>
        <string>New-StoredCredential [-Target &lt;String&gt;] [-UserName &lt;String&gt;] [-SecurePassword &lt;SecureString&gt;] [-Comment &lt;String&gt;] [-Type &lt;CRED_TYPE&gt;] [-Persist &lt;CRED_PERSIST&gt;] [-InformationAction &lt;ActionPreference&gt;] [-InformationVariable &lt;String&gt;]</string>
        <string>New-StoredCredential [-Target &lt;String&gt;] [-Comment &lt;String&gt;] [-Type &lt;CRED_TYPE&gt;] [-Persist &lt;CRED_PERSIST&gt;] [-Credentials &lt;PSCredential&gt;] [-InformationAction &lt;ActionPreference&gt;] [-InformationVariable &lt;String&gt;]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Target</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ValidateLengthAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the target of the credentials being added.</Description>
          <DefaultValue>hostname of localhost</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>UserName</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>specified the username to be used for the credentials, cannot be used in conjunction with Credentials parameter.</Description>
          <DefaultValue>logged on user</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Password</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the password in plain text, cannot be used in conjunction with SecurePassword or Credential parameters.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Comment</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Provides a comment to identify the credentials in the store</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="CRED_TYPE" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Type</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Type of credential to store, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE,   DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</Description>
          <DefaultValue>GENERIC</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="CRED_PERSIST" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Persist</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>sets the persistence settings of the credential, possible values are [SESSION, LOCAL_MACHINE, ENTERPRISE]</Description>
          <DefaultValue>SESSION</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="ActionPreference" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InformationAction</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>infa</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InformationVariable</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.Internal.CommonParameters+ValidateVariableName</string>
          </Attributes>
          <Aliases>
            <string>iv</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SecureString" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecurePassword</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>provides the password as a secure string, cannot be used in conjunction with Password or Credential parameters</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credentials</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>provides the username and password as a PSCredential object, cannot be used in conjunction with Password, SecurePassword or UserName parameters</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Remove" noun="StoredCredential">
      <Name>Remove-StoredCredential</Name>
      <GeneralHelp>
        <Synopsis>Deletes a credentials from the Windows Credential Store/Vault</Synopsis>
        <Description>Deletes a credentials from the Windows Credential Store/Vault</Description>
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Target Type Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Remove-StoredCredential -Target &lt;String&gt; [-Type &lt;CRED_TYPE&gt;] [-InformationAction &lt;ActionPreference&gt;] [-InformationVariable &lt;String&gt;]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="true" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Target</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>specifies a target to identitfy the credential to be deleted</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="CRED_TYPE" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Type</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the type of credential to be deleted, possible values are [GENERIC, DOMAIN_PASSWORD, DOMAIN_CERTIFICATE, DOMAIN_VISIBLE_PASSWORD, GENERIC_CERTIFICATE,   DOMAIN_EXTENDED, MAXIMUM, MAXIMUM_EX]</Description>
          <DefaultValue>GENERIC</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="ActionPreference" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InformationAction</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>infa</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InformationVariable</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.Internal.CommonParameters+ValidateVariableName</string>
          </Attributes>
          <Aliases>
            <string>iv</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Remove-StoredCredential -Target Server01 -Type GENERIC</Cmd>
          <Description>Deletes a generic credential with the target Server01</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
  </Cmdlets>
</ModuleObject>